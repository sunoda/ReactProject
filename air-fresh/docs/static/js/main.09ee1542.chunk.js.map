{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","counties","setCounties","records","setRecords","reverse","setReverse","useEffect","a","axios","result","sort","prev","next","PM25","cities","Set","map","record","county","fetchData","className","type","onKeyPress","event","after","keyCode","target","value","filter","Site","indexOf","SiteSearch","placeholder","onChange","city","cityChange","default","onClick","fields","title","info","label","DataCreationDate","ItemUnit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09ee1542.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction App() {\n  const [ data, setData ] = useState()\n  const [ counties, setCounties ] = useState()\n  const [ records, setRecords ] = useState()\n  const [ reverse, setReverse] = useState(false)\n  useEffect(() => {\n    async function fetchData(){\n      const result = await axios('https://data.epa.gov.tw/api/v1/aqx_p_02?limit=1000&api_key=9be7b239-557b-4c10-9775-78cadfc555e9&format=json');\n\n      result.data.records.sort((prev, next) => prev.PM25 - next.PM25)\n      setData({ ...result.data})\n      setRecords(result.data.records)\n      let cities = new Set(result.data.records.map(record => record.county))\n      setCounties([...cities])\n    }\n    fetchData()\n  }, [])\n  \n\n  const sortPM25 = () => {\n    setRecords(record => reverse ? record.sort((prev, next) => prev.PM25 - next.PM25) : record.sort((prev, next) => next.PM25 - prev.PM25))\n    setReverse(!reverse)\n  }\n  const cityChange = (city) => {\n    let after;\n    if(city){\n      after = data.records.filter(record => record.county === city)\n    } else {\n      after = data.records\n    }\n    setRecords(after)\n  }\n  const SiteSearch = (event) => {\n    let after;\n    if(event.keyCode === 0) {\n      event.target.value ? after = data.records.filter(record => record.Site.indexOf(event.target.value) >= 0)\n                         : after = data.records\n    }\n    setRecords(after)\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-main\">\n          <div className=\"functionArea\">\n            <label className=\"labelTag\">查詢檢測站 : </label>\n            <input type=\"text\" onKeyPress={(event) => SiteSearch(event)} placeholder=\"輸入後請按確認鍵\"/>\n            <select onChange={(event) => cityChange(event.target.value)}>\n              <option value=\"\" default>全部城市</option>\n              {counties?.map(county => <option value={county} key={county}>{county}</option>)}\n            </select>\n            <button onClick={sortPM25}>濃度排序</button>\n          </div>\n\n          <table>\n            <thead>\n              <tr>\n                {data?.fields.map(title => <th className=\"item\" key={title.info.label}>{title.info.label}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {records?.map(record =>\n                <tr key={record.Site}>\n                  <td className=\"item\">{record.Site}</td>\n                  <td className=\"item\">{record.county}</td>\n                  <td className=\"item\">{record.PM25}</td>\n                  <td className=\"item\">{record.DataCreationDate}</td>\n                  <td className=\"item\">{record.ItemUnit}</td>\n                </tr>)}\n            </tbody>\n          </table>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}